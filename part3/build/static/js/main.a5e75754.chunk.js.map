{"version":3,"sources":["components/PersonsList.js","components/AddNewEntry.js","components/Filter.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["PersonsList","persons","deleteEntry","map","i","name","number","onClick","AddNewEntry","props","onSubmit","addEntry","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleSearchInput","Notification","message","divClass","success","className","baseUrl","newPerson","axios","post","then","response","data","id","delete","put","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","filterResult","setFilterResult","notification","setNotification","notificationSuccess","setNotificationSuccess","getPersons","get","console","log","showNotification","setTimeout","useEffect","results","person","toLowerCase","includes","event","target","preventDefault","find","n","window","confirm","phonebookService","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5e75754.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonsList = ({ persons, deleteEntry }) => {\n  return(\n    <>\n      <ul>\n        {persons.map((persons, i) => \n          <li key={i}>{persons.name} {persons.number} <button onClick={() => deleteEntry(persons)}>delete</button></li>\n        )}\n      </ul>\n    </>\n  )\n}\n\nexport default PersonsList\n","import React from 'react'\n\nconst AddNewEntry = (props) => {\n  return(\n    <>\n      <form onSubmit={props.addEntry}>\n        <div>\n          <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n          <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default AddNewEntry\n","import React from 'react'\n\nconst Filter = ({ handleSearchInput, value }) => {\n  return(\n    <>\n      Search: <input value={value} onChange={handleSearchInput} />\n    </>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n\n  const divClass = success === true ? \"success\" : \"error\"\n\n  if (message === null) {\n    return null\n  }\n\n  return(\n    <div className={\"notification \" + divClass}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst addPerson = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst removePerson = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst updateNumber = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then(response => response.data)\n}\n\nexport default { addPerson, removePerson, updateNumber }\n","import React, { useState, useEffect } from 'react'\nimport PersonsList from './components/PersonsList'\nimport AddNewEntry from './components/AddNewEntry'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport axios from 'axios'\nimport './index.css'\nimport phonebookService from './services/phonebook'\n\nconst baseUrl = 'api/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ filterResult, setFilterResult ] = useState([])\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationSuccess, setNotificationSuccess] = useState(true)\n\n  // get and set persons\n  const getPersons = () => {\n    axios.get(baseUrl)\n    .then(response => {\n      console.log(response)\n      setPersons(response.data)\n    })\n  }\n\n  // add entry to db and update state\n  const addEntry = (event) => {\n    event.preventDefault()\n    // update persons state\n    getPersons()\n    // create newPerson object\n    let newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    // if person's name not already in phonebook, create new entry\n    if (!persons.map(person => person.name.toLowerCase()).includes(newName.toLowerCase())) {\n      phonebookService\n        .addPerson(newPerson)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.concat(response))\n          showNotification(`Added ${newName}`, true)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          showNotification(error.response.data.error, false)\n        })\n    // else if person's name already in phonebook, update number\n    // ISSUE: if document is missing from db but present in FE state, response is null so catch does not get catch the error and the first .then() block is executed, concats null, calls useffect\n      // possible solution: make func to query db and set persons state, call at beginning of addEntry\n    } else {\n      let id = persons.find(n => n.name.toLowerCase() === newName.toLowerCase()).id\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\n        phonebookService\n          .updateNumber(id, newPerson)\n          .then(response => {\n            console.log(response)\n            setPersons(persons.map(person => person.id === id ? response : person))\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            //showNotification(`${newName} has already been removed from server`, false)\n            showNotification(error.response.data.error, false)\n            //setPersons(persons.filter(person => person.id !== id))\n          })\n      }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const showNotification = (message, success) => {\n    setNotificationSuccess(success)\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  // remove entry from db and update state\n  const deleteEntry = (person) => {\n    if (window.confirm(`delete ${person.name}?`)) {\n      phonebookService\n        .removePerson(person.id)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n        .catch(error => {\n          console.log(error)\n          showNotification(`${person.name} has already been removed`, false)\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n    }\n  }\n\n  // when user inputs to newName field\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  // when user inputs to newNumber field\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchInput = (event) => {\n    setFilter(event.target.value)\n  }\n\n  // get initial data\n  useEffect(() => {\n    /*\n    axios.get(baseUrl)\n    .then(response => {\n      console.log(response)\n      setPersons(response.data)\n    })\n    */\n    getPersons()\n  }, [])\n\n  // update filtered results\n  useEffect(() => {\n    const results = persons.filter((person) => {\n      return person.name.toLowerCase().includes(filter.toLowerCase())\n    })\n    if (results !== '') {\n      setFilterResult(results)\n    } else {\n      setFilterResult(persons)\n    }\n  }, [filter, persons])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} success={notificationSuccess}/>\n      <Filter handleSearchInput={handleSearchInput} value={filter} />\n      <h2>Add new listing</h2>\n      <AddNewEntry\n        addEntry={addEntry}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <PersonsList persons={filterResult} deleteEntry={deleteEntry} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}